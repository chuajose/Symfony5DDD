security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        database:
            id: App\Infrastructure\oAuth2Server\Provider\UserProvider
    encoders:
        App\Domain\Auth\Model\User:
            algorithm: 'auto'
            cost: 12
            # maximum memory (in KiB) that may be used to compute the Argon2 hash
            memory_cost: 16384
            #  number of times the Argon2 hash algorithm will be run
            time_cost: 6
            # number ofopsLimit  to use for computing the native hash
            iterations: 6

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern:        ^/
            anonymous: ~
            logout:
                path: app_logout
            guard:
                authenticators:
                    - App\Infrastructure\oAuth2Server\EventSubscriber\TokenAuthenticator
                    - App\Infrastructure\oAuth2Server\EventSubscriber\LoginFormAuthenticator
                entry_point: App\Infrastructure\oAuth2Server\EventSubscriber\LoginFormAuthenticator
                provider: database
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
        login:
            pattern:   ^/api/accessToken
            anonymous: true
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
